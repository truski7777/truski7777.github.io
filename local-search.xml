<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>GitHub Pages + Hexo 搭建个人博客完整教程</title>
    <link href="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <url>/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大家好！作为编程新手，我第一次搭建个人博客时遇到了不少问题。为了帮助和我一样的初学者，我将详细记录使用 GitHub Pages 和 Hexo 搭建个人博客的全过程，包括遇到的问题和解决方案。</p><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>在开始搭建博客之前，我们需要先安装一些必要的工具和软件。</p><p><strong>关于图片引用的说明：</strong><br>在Hexo中，除了使用标准的Markdown图片语法外，还可以使用Hexo提供的asset_img标签来引用图片，这样可以更好地管理文章资源。使用方法如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% asset<span class="hljs-emphasis">_img test.png 图片描述 %&#125;</span><br></code></pre></td></tr></table></figure><h3 id="1-注册-GitHub-账号"><a href="#1-注册-GitHub-账号" class="headerlink" title="1. 注册 GitHub 账号"></a>1. 注册 GitHub 账号</h3><p>首先访问 <a href="https://github.com/">GitHub 官网</a> 注册一个账号。</p><p>如果不知道如何注册，可以参考这个 <a href="https://blog.csdn.net/yaorongke/article/details/119086305">账号注册教程</a>。</p><h3 id="2-安装-Git"><a href="#2-安装-Git" class="headerlink" title="2. 安装 Git"></a>2. 安装 Git</h3><p>访问 <a href="https://git-scm.com/">Git 官方网站</a> 下载并安装 Git。</p><p>安装完成后，在任意文件夹中点击鼠标右键，你会看到 “Git Bash Here” 选项：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/1.png" class="" title="Git Bash Here 选项"><p>打开 Git Bash，输入以下命令验证安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git --version<br></code></pre></td></tr></table></figure><p>如果显示版本信息，说明 Git 安装成功：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/2.png" class="" title="Git 安装成功"><p>如果需要详细的 Git 安装教程，可以参考这个 <a href="https://www.cnblogs.com/linuxgeek/articles/18928378">Git 安装教程</a>。</p><h3 id="3-安装-Node-js"><a href="#3-安装-Node-js" class="headerlink" title="3. 安装 Node.js"></a>3. 安装 Node.js</h3><p>访问 <a href="https://nodejs.org/en">Node.js 官方网站</a> 下载并安装 Node.js。</p><p>安装完成后，打开命令行工具，输入以下命令验证安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br></code></pre></td></tr></table></figure><p>如果显示版本信息，说明 Node.js 安装成功：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/3.png" class="" title="Node.js 安装成功"><h3 id="4-安装-Hexo"><a href="#4-安装-Hexo" class="headerlink" title="4. 安装 Hexo"></a>4. 安装 Hexo</h3><p>在命令行中执行以下命令安装 Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo -g<br></code></pre></td></tr></table></figure><p>安装完成后，输入以下命令验证是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo -v<br></code></pre></td></tr></table></figure><p>如果显示版本信息，说明 Hexo 安装成功：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/4.png" class="" title="Hexo 安装成功"><h3 id="5-安装-Hexo-部署插件"><a href="#5-安装-Hexo-部署插件" class="headerlink" title="5. 安装 Hexo 部署插件"></a>5. 安装 Hexo 部署插件</h3><p>执行以下命令安装 Hexo 部署到 GitHub 所需的插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure><p>如果你打算使用asset_img标签来管理文章中的图片，还需要安装hexo-asset-image插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-asset-image --save<br></code></pre></td></tr></table></figure><h2 id="二、配置-Git-SSH-Key"><a href="#二、配置-Git-SSH-Key" class="headerlink" title="二、配置 Git SSH Key"></a>二、配置 Git SSH Key</h2><h3 id="为什么要配置-SSH-Key？"><a href="#为什么要配置-SSH-Key？" class="headerlink" title="为什么要配置 SSH Key？"></a>为什么要配置 SSH Key？</h3><p>配置 SSH Key 的目的是实现免密登录，这样你就可以无需每次输入账号和密码就能将本地代码和资源上传到 GitHub。</p><h3 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h3><h4 id="1-生成-SSH-Key"><a href="#1-生成-SSH-Key" class="headerlink" title="1. 生成 SSH Key"></a>1. 生成 SSH Key</h4><p>打开 Git Bash，输入以下命令生成 SSH Key（请将 “你的邮箱地址” 替换为 GitHub 账号绑定的邮箱地址）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的邮箱地址&quot;</span><br></code></pre></td></tr></table></figure><p>执行命令后，系统会在用户文件夹下生成一个 <code>.ssh</code> 文件夹：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/5.png" class="" title="SSH Key 文件夹"><h4 id="2-添加-SSH-Key-到-GitHub"><a href="#2-添加-SSH-Key-到-GitHub" class="headerlink" title="2. 添加 SSH Key 到 GitHub"></a>2. 添加 SSH Key 到 GitHub</h4><p>进入 <code>.ssh</code> 文件夹，复制 <code>id_rsa.pub</code> 文件中的全部内容。</p><p>接着打开 GitHub 主页，点击右上角头像，选择 “Settings”，然后点击左侧的 “SSH and GPG keys”，点击 “New SSH key”，将复制的内容粘贴到 “Key” 输入框中，”Title” 可以随意命名。</p><p>点击 “Add SSH key” 完成添加。</p><h4 id="3-测试-SSH-Key-配置"><a href="#3-测试-SSH-Key-配置" class="headerlink" title="3. 测试 SSH Key 配置"></a>3. 测试 SSH Key 配置</h4><p>在 Git Bash 中输入以下命令测试配置是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>输入命令后，系统可能会提示你输入 “yes”，如果出现如下提示说明配置成功：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/6.png" class="" title="SSH Key 配置成功"><h4 id="4-配置-Git-用户信息"><a href="#4-配置-Git-用户信息" class="headerlink" title="4. 配置 Git 用户信息"></a>4. 配置 Git 用户信息</h4><p>执行以下命令配置你的 Git 用户名和邮箱地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;你的用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;你的邮箱地址&quot;</span><br></code></pre></td></tr></table></figure><h4 id="5-在-GitHub-创建远程仓库"><a href="#5-在-GitHub-创建远程仓库" class="headerlink" title="5. 在 GitHub 创建远程仓库"></a>5. 在 GitHub 创建远程仓库</h4><p>在 GitHub 上创建一个新的仓库，用于存放你的博客内容：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/7.png" class="" title="创建 GitHub 仓库"><p><strong>重要提示：</strong><br>仓库名称必须遵循以下格式：<code>用户名.github.io</code></p><p>这个仓库名称将作为你 GitHub 博客的访问地址。</p><hr><p><strong>（推荐）有关 Git 的详细教程可以看这个：</strong><a href="https://juejin.cn/post/7245176801491894333">Git 详细教程</a></p><h2 id="三、搭建个人博客"><a href="#三、搭建个人博客" class="headerlink" title="三、搭建个人博客"></a>三、搭建个人博客</h2><h3 id="1-Hexo-基本命令介绍"><a href="#1-Hexo-基本命令介绍" class="headerlink" title="1. Hexo 基本命令介绍"></a>1. Hexo 基本命令介绍</h3><p>在开始之前，先了解一下 Hexo 的基本命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;postName&quot;</span>        <span class="hljs-comment"># 新建文章</span><br>hexo new page <span class="hljs-string">&quot;pageName&quot;</span>   <span class="hljs-comment"># 新建页面</span><br>hexo generate              <span class="hljs-comment"># 生成静态页面至 public 目录</span><br>hexo server                <span class="hljs-comment"># 开启预览访问端口（默认端口 4000，&#x27;Ctrl + C&#x27; 关闭 server）</span><br>hexo deploy                <span class="hljs-comment"># 部署到 GitHub</span><br>hexo <span class="hljs-built_in">help</span>                  <span class="hljs-comment"># 查看帮助</span><br>hexo version               <span class="hljs-comment"># 查看 Hexo 的版本</span><br></code></pre></td></tr></table></figure><p>在使用时可以使用缩写：</p><ul><li><code>hexo n</code> 等同于 <code>hexo new</code></li><li><code>hexo g</code> 等同于 <code>hexo generate</code></li><li><code>hexo s</code> 等同于 <code>hexo server</code></li><li><code>hexo d</code> 等同于 <code>hexo deploy</code></li></ul><h3 id="2-初始化博客"><a href="#2-初始化博客" class="headerlink" title="2. 初始化博客"></a>2. 初始化博客</h3><p>新建一个用于保存博客的目录，例如：<code>D:\博客\0001</code></p><p>进入本地博客存放目录，鼠标右键选择 “Git Bash Here”，执行以下命令初始化个人博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>执行完成后，博客存放目录会出现以下内容：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/8.png" class="" title="博客初始化内容"><p>生成静态网页：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><p>本地预览：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/9.png" class="" title="本地预览启动"><p>在浏览器中访问 <a href="http://localhost:4000/">http://localhost:4000/</a>，你会看到默认的博客页面：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/image.png" class="" title="默认博客页面"><h3 id="3-部署到-GitHub"><a href="#3-部署到-GitHub" class="headerlink" title="3. 部署到 GitHub"></a>3. 部署到 GitHub</h3><p>编辑博客根目录下的 <code>_config.yml</code> 文件，在文件末尾添加以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">你的</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">仓库地址</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>同时还需要修改以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">url:</span> <span class="hljs-string">https://用户名.github.io</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/</span><br></code></pre></td></tr></table></figure><p><strong>重要提示：</strong> 如果不修改这些配置，浏览器访问时可能会显示空白页面。</p><p>执行以下命令将博客部署到 GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><p>部署完成后，在浏览器中访问 <code>https://用户名.github.io/</code> 即可查看你的在线博客。</p><h3 id="4-编写博客文章"><a href="#4-编写博客文章" class="headerlink" title="4. 编写博客文章"></a>4. 编写博客文章</h3><p>搭建好博客之后，日常使用中需要编写博客文章并同步到 GitHub。</p><p>新建一篇博客文章的命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;文章标题&quot;</span><br></code></pre></td></tr></table></figure><p>执行命令后，可以在 <code>source/_posts</code> 目录下看到生成的 Markdown 文件：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/13.png" class="" title="Markdown 文件"><p>生成的文件内容默认如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 文章标题<br>date: 2025-09-10 16:35:20<br><span class="hljs-section">tags:</span><br><span class="hljs-section">---</span><br>这里开始编写正文<br></code></pre></td></tr></table></figure><p>开始编写博客内容（使用 Markdown 格式）。</p><p>编写完成后，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 清除本地缓存</span><br>hexo clean<br><br><span class="hljs-comment"># 生成 HTML 文件</span><br>hexo g<br><br><span class="hljs-comment"># 上传到 GitHub</span><br>hexo d<br></code></pre></td></tr></table></figure><p>再次访问 <code>https://用户名.github.io/</code> 即可查看更新后的博客。</p><h2 id="四、更换主题"><a href="#四、更换主题" class="headerlink" title="四、更换主题"></a>四、更换主题</h2><p>如果觉得 Hexo 默认的主题不够美观，可以根据个人喜好更换主题。Hexo 官方提供了数百种主题供用户选择。</p><p>访问 <a href="https://hexo.io/">Hexo 主题官网</a> 浏览各种主题：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/10.png" class="" title="Hexo 主题官网"><p>每个主题都有相对应的用户文档，你可以根据文档进行配置。</p><p><strong>重要提示：</strong> 博客的根目录和 <code>themes</code> 文件夹中都有 <code>_config.yml</code> 配置文件，在修改配置文件时要注意区分所在目录。</p><p>我的博客地址：<a href="https://truski7777.github.io/">https://truski7777.github.io/</a></p><p>更换主题后的效果：</p><img src="/2025/09/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/11.png" class="" title="更换主题效果"><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上内容详细记录了使用 GitHub Pages 和 Hexo 搭建个人博客的完整流程。如果你在搭建过程中遇到问题，可以参考以下资源：</p><ol><li><p><a href="http://t.csdnimg.cn/ToUvo">博客搭建详细教程</a> - 包含非常详细的教程和配置文件修改说明</p></li><li><p><a href="https://www.cnblogs.com/codebreeze/p/18810560">个性化修改指南</a> - 帮助你个性化定制博客</p></li><li><p><a href="https://juejin.cn/post/7245176801491894333">Git 详细教程</a> - Git 使用详解</p></li></ol><h3 id="关于图片引用的补充说明"><a href="#关于图片引用的补充说明" class="headerlink" title="关于图片引用的补充说明"></a>关于图片引用的补充说明</h3><p>在本文档中，我们使用了标准的Markdown图片语法来引用图片，但在实际使用中，Hexo提供了更强大的asset_img标签来管理文章资源：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% asset<span class="hljs-emphasis">_img test.png 图片描述 %&#125;</span><br></code></pre></td></tr></table></figure><p>使用asset_img标签的优势：</p><ol><li>更好的资源管理：图片会与文章关联，便于迁移和备份</li><li>自动路径处理：无需手动处理相对路径问题</li><li>更好的兼容性：在不同环境下都能正确显示图片</li></ol><p>使用方法：</p><ol><li>将图片文件放在与文章同名的文件夹中（例如：个人博客搭建教程&#x2F;）</li><li>在文章中使用<code>&#123;% asset_img 图片名.png 图片描述 %&#125;</code>语法引用图片</li></ol><p>希望这篇教程能帮助你顺利搭建自己的个人博客！如果有任何问题，欢迎在评论区留言讨论。</p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>Hexo</tag>
      
      <tag>GitHub Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/09/09/hello-world/"/>
    <url>/2025/09/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
